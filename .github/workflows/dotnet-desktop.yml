name: .NET Framework Build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1

    - name: Restore Dependencies for LibReFrontier
      run: nuget restore ./LibReFrontier/LibReFrontier.csproj -SolutionDirectory .

    - name: Build LibReFrontier Project
      run: msbuild ./LibReFrontier/LibReFrontier.csproj /p:Configuration=Release

    - name: Restore Dependencies for ReFrontier
      run: nuget restore ./Refrontier/ReFrontier.csproj -SolutionDirectory .
    - name: Publish ReFrontier Project
      run: msbuild ./Refrontier/ReFrontier.csproj /t:Publish /p:Configuration=Release /p:Platform="AnyCPU" /p:OutputPath=output

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: D:\a\ReFrontier-ReLeased\ReFrontier-ReLeased\Refrontier\outputapp.publish\Application Files\

  release-assets:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout-release
      uses: actions/checkout@v2

    - name: Download Build Artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
        path: ./output

    - name: Unzip Build Artifacts
      run: |
        ls output/ReFrontier_1_0_0_0

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v1.0.8
        release_name: ReFrontier Release
        draft: false
        prerelease: false
    
    - name: Install GitHub CLI
      run: sudo apt-get install gh

    - name: Upload Release Assets
      run: |
        for file in output/ReFrontier_1_0_0_0/*; do
          echo "Uploading $file..."
          gh release upload ${{ steps.create_release.outputs.upload_url }} "$file" --clobber
        done
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


 
    