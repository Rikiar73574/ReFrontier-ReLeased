name: .NET Framework Build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1

    - name: Restore Dependencies for LibReFrontier
      run: nuget restore ./LibReFrontier/LibReFrontier.csproj -SolutionDirectory .

    - name: Build LibReFrontier Project
      run: msbuild ./LibReFrontier/LibReFrontier.csproj /p:Configuration=Release

    - name: Restore Dependencies for ReFrontier
      run: nuget restore ./Refrontier/ReFrontier.csproj -SolutionDirectory .
    - name: Publish ReFrontier Project
      run: msbuild ./Refrontier/ReFrontier.csproj /t:Publish /p:Configuration=Release /p:Platform="AnyCPU" /p:OutputPath=output

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: D:\a\ReFrontier-ReLeased\ReFrontier-ReLeased\Refrontier\outputapp.publish\Application Files\

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v1.0.0
        release_name: ReFrontier Release
        draft: false
        prerelease: false

    - name: Upload Release Assets
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        Get-ChildItem -Path Refrontier/output | ForEach-Object {
          if (-not $_.PSIsContainer) {
            Write-Output "Uploading $($_.FullName)..."
            $response = Invoke-RestMethod -Method Post `
                      -Uri "${{ steps.create_release.outputs.upload_url }}?name=$($_.Name)" `
                      -Headers @{ Authorization = "token $env:GITHUB_TOKEN" } `
                      -ContentType "application/octet-stream" `
                      -InFile $_.FullName

            if ($response.StatusCode -eq 201) {
              Write-Output "Upload successful!"
            } else {
              Write-Output "Upload failed. Status code: $($response.StatusCode)"
            }
          }
        }
